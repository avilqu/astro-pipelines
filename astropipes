#!/usr/bin/env python3
"""
Astropipes command line tool
Calls astropipes.py from the correct directory with virtual environment
"""

import os
import sys
import subprocess

def main():
    # Get the directory where this script is located
    script_dir = os.path.dirname(os.path.abspath(__file__))
    
    # If this script is in a system bin directory, we need to find the actual project directory
    if script_dir in ['/usr/local/bin', '/home/tan/bin', '/usr/bin', '/opt/homebrew/bin']:
        # First check for environment variable
        astropipes_home = os.environ.get('ASTROPIPES_HOME')
        if astropipes_home and os.path.exists(os.path.join(astropipes_home, 'astropipes.py')):
            project_dir = astropipes_home
        else:
            # Look for the project in common locations
            possible_paths = [
                '/home/tan/dev/astro-pipelines',  # User's development path
                '/opt/astro-pipelines',           # System installation
                '/usr/local/astro-pipelines',     # Alternative system installation
            ]
            
            project_dir = None
            for path in possible_paths:
                if os.path.exists(os.path.join(path, 'astropipes.py')):
                    project_dir = path
                    break
            
            if project_dir is None:
                print("Error: Could not find astropipes.py in common installation directories")
                print("Please ensure astropipes is properly installed or set ASTROPIPES_HOME environment variable")
                print("Example: export ASTROPIPES_HOME=/path/to/astro-pipelines")
                sys.exit(1)
    else:
        # Running from project directory
        project_dir = script_dir
    
    # Path to the astropipes.py file
    astropipes_path = os.path.join(project_dir, 'astropipes.py')
    
    # Check if astropipes.py exists
    if not os.path.exists(astropipes_path):
        print(f"Error: astropipes.py not found at {astropipes_path}")
        sys.exit(1)
    
    # Path to the virtual environment python
    venv_python = os.path.join(project_dir, '.venv', 'bin', 'python')
    
    # Check if virtual environment exists
    if os.path.exists(venv_python):
        python_executable = venv_python
    else:
        # Fallback to system python if virtual environment doesn't exist
        python_executable = sys.executable
        print("Warning: Virtual environment not found, using system Python")
    
    # Pass all arguments to astropipes.py
    args = sys.argv[1:]
    
    # Run astropipes.py with the same arguments
    try:
        result = subprocess.run([python_executable, astropipes_path] + args, 
                              cwd=project_dir, check=True)
        sys.exit(result.returncode)
    except subprocess.CalledProcessError as e:
        sys.exit(e.returncode)
    except KeyboardInterrupt:
        sys.exit(1)

if __name__ == "__main__":
    main() 